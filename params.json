{"name":"Klustaviewa","tagline":"","body":"KlustaViewa\r\n===========\r\n\r\n*KlustaViewa* (previously *Spiky*) is a software for semi-automatic spike \r\nsorting with high-channel count silicon probes.\r\nIt is meant to be used after the automatic clustering stage.\r\nThis interface automatically guides the user through the clustered data and \r\nlets him or her refine the data. \r\nThe goal is to make the manual stage more reliable, quicker, and less\r\nerror-prone.\r\n\r\nThis software was developed by Cyrille Rossant in the [Cortical Processing Laboratory](http://www.ucl.ac.uk/cortexlab) at UCL.\r\n\r\n\r\n\r\n\r\nScreenshots\r\n-----------\r\n\r\n[![Screenshot 1](images/thumbnails/img0.png)](images/img0.PNG)\r\n[![Screenshot 2](images/thumbnails/img1.png)](images/img1.PNG)\r\n\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nThe software is still in development, but you can download an experimental\r\nversion here.\r\n\r\n### Step 1\r\n\r\nYou need Python 2.7 and a bunch of other common scientific packages.\r\n\r\n  * Install [Python 2.7](http://python.org/download/) (available on Windows, OS X, or Linux),\r\n    64 bits (recommended) or 32 bits.\r\n\r\nFor the external packages, the procedure depends on your system.\r\n\r\n#### Windows\r\n\r\n[Go on this webpage](http://www.lfd.uci.edu/~gohlke/pythonlibs/) and \r\ndownload:\r\n    \r\n  * Numpy >= 1.7\r\n  * Pandas >= 0.10\r\n  * Matplotlib >= 1.1.1\r\n  * PyOpenGL >= 3.0.1\r\n  * PyQt4\r\n  * Distribute\r\n  * (optional) Pip (for installing Python packages easily)\r\n  * (optional) Nose (for unit tests)\r\n  \r\nFor each package, be sure to choose the appropriate version (it should be\r\n`*.win-amd64-py2.7.exe` for Python 64 bits, or `*.win32-py2.7.exe`\r\nfor Python 32 bits).\r\n\r\n#### OS X\r\n\r\nGo on [HomeBrew](http://mxcl.github.io/homebrew/) and install the packages\r\nlisted above.\r\n\r\n#### Ubuntu >= 13.x\r\n\r\nType in a shell:\r\n\r\n    $ sudo apt-get install python2.7 python-numpy python-pandas python-matplotlib python-opengl python-qt4 python-qt4-gl python-distribute python-pip python-nose\r\n\r\n#### Ubuntu < 13.x\r\n\r\nType in a shell:\r\n\r\n    $ sudo apt-get install python2.7 python-matplotlib python-opengl python-qt4 python-qt4-gl python-distribute python-pip python-nose\r\n    \r\nThen, you need to install NumPy >= 1.7 and Pandas >= 0.10, and they are only available for Ubuntu >= 13.x. To install them on Ubuntu < 13.x, you can do the following:\r\n\r\n  * Go [here](http://packages.ubuntu.com/raring/python/) and download:\r\n  \r\n      * python-numpy\r\n      * python-pandas-lib\r\n      * python-pandas\r\n      \r\n  * Install them, in that order, with `dpgk -i python-numpy_1.7.1-1ubuntu1_amd64.deb` and so on, replacing the file name with the appropriate ones (`amd64` for Python 64 bits, `i386` for Python 32 bits).\r\n\r\n\r\n#### IPython 1.0.dev\r\n\r\nThis step is optional and only useful to experienced users. If IPython 1.0.dev is installed, then you will have the possibility to open an IPython terminal in the context of the GUI. This lets you access all elements and data variables programatically. To install this version of IPython, do the following:\r\n\r\n  * Ensure that any version of IPython is uninstalled.\r\n  * Install pygments with `pip install pygments`\r\n  * Execute the following commands:\r\n  \r\n        git clone https://github.com/ipython/ipython.git\r\n        cd ipython\r\n        python setupegg.py develop\r\n  \r\nThen, in the software, you will be able to open an interactive IPython shell (with pylab mode activated) in the Views menu. Type `%who` to see the list of available variables.\r\n\r\n  \r\n### Step 2\r\n\r\n  * Windows & Python 64 bits: [download and install KlustaViewa.](http://klustaviewa.rossant.net/klustaviewa-0.1.0.dev.win-amd64-py2.7.exe)\r\n  Skip steps 3 and 4 and go directly to step 5.\r\n  * Other configurations: [download KlustaViewa.](http://klustaviewa.rossant.net/klustaviewa-0.1.0.dev.zip)\r\n\r\nSome portions of the code are accelerated using Cython, so you need a C compiler like gcc if you want to use the accelerated version. If you don't have one, a slower version will be automatically used.\r\n\r\n### Step 3\r\n\r\nExtract this ZIP file in a temporary folder.\r\n\r\n\r\n### Step 4\r\n\r\n  * On Windows, double-click on `windows_install.bat`.\r\n  * On other systems, open a system shell in the temporary directory where\r\n    you extracted the package, and execute the following command:\r\n    `python setup.py install`.\r\n\r\n### Step 5\r\n\r\nTo run the software, execute `klustaviewa` in a system shell.\r\n\r\nOn Windows, you may need to add `C:\\Python27\\Scripts` in the PATH variable,\r\nas [described here](http://geekswithblogs.net/renso/archive/2009/10/21/how-to-set-the-windows-path-in-windows-7.aspx).\r\n\r\n\r\nDetails\r\n-------\r\n\r\n### Dependencies\r\n  \r\nThe following libraries are required:\r\n  \r\n  * Python 2.7\r\n  * Numpy >= 1.7\r\n  * Pandas >= 0.10\r\n  * Matplotlib >= 1.1.1\r\n  * PyOpenGL >= 3.0.1\r\n  * either PyQt4 or PySide\r\n\r\nMore generally, we also recommend [pip](https://pypi.python.org/pypi/pip) and \r\n[IPython](http://ipython.org/) as they are commonly used for \r\nscientific computing with Python.\r\n  \r\n### OpenGL\r\n  \r\nFor KlustaView, you need OpenGL >= 2.1. To find out which version of OpenGL \r\nyou have:\r\n\r\n  * Use [OpenGL Extensions Viewer](http://www.realtech-vr.com/glview/)\r\n  * Alternatively, on Linux, run `glxinfo`.\r\n\r\nKlustaViewa works better with a good graphics card as it uses\r\nhardware-accelerated visualization. With a lower end graphics card, the\r\nsoftware will work but somewhat slower.\r\n\r\n\r\n### Development version\r\n\r\nUse this if you want to be able to update with `git pull` (you need git).\r\n\r\n  * Clone the repository:\r\n  \r\n        git clone https://github.com/rossant/klustaviewa.git\r\n  \r\n  * Install KlustaViewa with `pip` so that external packages are automatically\r\n    updated (like `qtools` which contains some Qt-related utility functions):\r\n  \r\n        pip install -r requirements.txt\r\n\r\n  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}