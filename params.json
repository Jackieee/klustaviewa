{"name":"Klustaviewa","tagline":"","body":"KlustaViewa\r\n===========\r\n\r\n*KlustaViewa* is a software for semi-automatic spike sorting with high-channel count silicon probes. It streamlines the manual stage occurring after the automatic clustering stage by guiding the user through the clustered data, letting him or her refine the clusters. The goal is to make the manual stage more reliable, quicker, and less error-prone.\r\n\r\nThis software was developed by Cyrille Rossant in the [Cortical Processing Laboratory](http://www.ucl.ac.uk/cortexlab) at UCL.\r\n\r\n\r\nUser guide\r\n----------\r\n\r\n  * [See the user guide here](https://github.com/klusta-team/klustaviewa/blob/master/docs/manual.md).\r\n\r\n\r\nScreenshots\r\n-----------\r\n\r\n[![Screenshot 1](images/thumbnails/img0.png)](images/img0.PNG)\r\n[![Screenshot 2](images/thumbnails/img1.png)](images/img1.PNG)\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n  * The software is in beta version at this time.\r\n  * The installation procedure depends on your operating system.\r\n\r\n### Windows 7/8 64 bits\r\n\r\n  * Step 1: if you don't already have a Python installation, [download this ZIP file (70MB)](http://klustaviewa.rossant.net/klustaviewa-dependencies.zip) containing a full Python distribution (required by KlustaViewa).\r\n  * Step 2: unzip the archive. You'll find several installers: execute them all one by one, in the right order.\r\n  * Step 3: download the [KlustaViewa Windows 64 bits installer (<1MB)](http://klustaviewa.rossant.net/klustaviewa-0.1.0.dev.win-amd64-py2.7.exe) and execute it.\r\n  * Step 4: you can launch the software using the executable found in `C:\\Python27\\Scripts\\klustaviewa.exe`. You can create a shortcut to this file on your desktop.\r\n\r\nOnce the software is installed, you can update it when a new version is available by doing again **Step 3** only.\r\n\r\n### Ubuntu\r\n\r\n  * Step 1: on Ubuntu >= 13.x, type in a shell:\r\n\r\n        $ sudo apt-get install python2.7 python-numpy python-pandas python-matplotlib python-opengl python-qt4 python-qt4-gl python-distribute python-pip python-nose\r\n\r\n    On Ubuntu < 13.x, type:\r\n\r\n        $ sudo apt-get install python2.7 python-matplotlib python-opengl python-qt4 python-qt4-gl python-distribute python-pip python-nose\r\n        \r\n  * Step 2: **UBUNTU < 13.x ONLY**. Go [here](http://packages.ubuntu.com/raring/python/) and download:\r\n  \r\n      * python-numpy\r\n      * python-pandas-lib\r\n      * python-pandas\r\n      \r\n    Install them, in that order, with `dpgk -i python-numpy_1.7.1-1ubuntu1_amd64.deb` and so on, replacing the file name with the appropriate ones (`amd64` for Python 64 bits, `i386` for Python 32 bits).\r\n\r\n  * Step 3: [download KlustaViewa](http://klustaviewa.rossant.net/klustaviewa-0.1.0.dev.zip) and extract the package.\r\n  \r\n  * Step 4: open a system shell in the directory where you extracted the package, and execute the following command:\r\n  \r\n        python setup.py install\r\n\r\n  * Step 5: to run KlustaViewa, type the following command in a system shell:\r\n  \r\n        klustaviewa\r\n\r\n\r\n### Mac OS X\r\n\r\n  * Step 1: go on [HomeBrew](http://mxcl.github.io/homebrew/) and install the following packages:\r\n  \r\n      * Python 2.7\r\n      * Numpy >= 1.7\r\n      * Pandas >= 0.10\r\n      * Matplotlib >= 1.1.1\r\n      * PyOpenGL >= 3.0.1\r\n      * PyQt4\r\n\r\n  * Step 2: [download KlustaViewa](http://klustaviewa.rossant.net/klustaviewa-0.1.0.dev.zip) and extract the package.\r\n  \r\n  * Step 3: open a system shell in the directory where you extracted the package, and execute the following command:\r\n  \r\n        python setup.py install\r\n  \r\n  * Step 4: to run KlustaViewa, type the following command in a system shell:\r\n  \r\n        klustaviewa\r\n\r\n\r\nDetails\r\n-------\r\n\r\n### Dependencies\r\n  \r\nThe following libraries are required:\r\n  \r\n  * Python 2.7\r\n  * Numpy >= 1.7\r\n  * Pandas >= 0.10\r\n  * Matplotlib >= 1.1.1\r\n  * PyOpenGL >= 3.0.1\r\n  * either PyQt4 or PySide\r\n\r\n\r\n### OpenGL\r\n  \r\nKlustaViewa requires OpenGL >= 2.1. To find out which version of OpenGL is available on your system:\r\n\r\n  * Use [OpenGL Extensions Viewer](http://www.realtech-vr.com/glview/)\r\n  * Alternatively, on Linux, run `glxinfo`.\r\n\r\nKlustaViewa works better with a good graphics card as it uses hardware-accelerated visualization. With a lower end graphics card, the software will work but somewhat slower.\r\n\r\n\r\n### Development version\r\n\r\nUse this if you want to be able to update with `git pull` (you need git).\r\n\r\n  * Clone the repository:\r\n  \r\n        git clone https://github.com/rossant/klustaviewa.git\r\n  \r\n  * Install KlustaViewa with `pip` so that external packages are automatically updated (like `qtools` which contains some Qt-related utility functions):\r\n  \r\n        pip install -r requirements.txt\r\n        \r\n\r\n### IPython 1.0.dev\r\n\r\nIf IPython 1.0.dev is installed, then you will have the possibility to open an IPython terminal in the context of the GUI. This lets you access all elements and data variables programatically. To install this version of IPython, do the following:\r\n\r\n  * Ensure that any version of IPython is uninstalled.\r\n  * Install pygments with `pip install pygments`\r\n  * Execute the following commands:\r\n  \r\n        git clone https://github.com/ipython/ipython.git\r\n        cd ipython\r\n        python setupegg.py develop\r\n  \r\nThen, in the software, you will be able to open an interactive IPython shell (with pylab mode activated) in the Views menu. Type `%who` to see the list of available variables.\r\n\r\n  \r\nTroubleshooting\r\n---------------\r\n\r\n### Common errors in Windows\r\n\r\n  * If you can't run `python` or `klustaviewa` in a console, you may need to add `C:\\Python27\\Scripts` in the PATH variable, as [described here](http://geekswithblogs.net/renso/archive/2009/10/21/how-to-set-the-windows-path-in-windows-7.aspx).\r\n\r\n\r\n### Contact\r\n\r\nIf you have any trouble, bug, comment or suggestion, please send an e-mail to the author of the software: cyrille *dot* rossant *at* gmail *dot* com.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}